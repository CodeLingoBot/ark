/*
 Test block comment
*/

# hello

// hello

i1: i32 = 0b100010_101010; // 2218
i2: i32 = 0x39_57; // 14679
i3: i32 = 0o25_36; // 1374
i4: i32 = 1_000_005;
rune1 := 'a';
rune2: rune = '\\';
rune3: rune = '\'';
mut float: f64 = 0.2465f;
float2: f64 = 1.35d;
mut float3: f64 = 0.0004;
mut s1: str= "he\"llo";
//un: i8 = !1;
t: int = int('h');

mut bintest: int = 5 * 5 + 5 * 5;
mshifttest: int = 10 << 7;

inferenceTest := 10;

// packed structure syntax idea?
struct Test [packed,deprecated="Deprecated Message"] {
    a: i32 = 5,
    b := 5
}

func ten(): int {
	return 0x05 + 5;
}


func _2345_test日本語てすと(と: int, un: i32): int {

}

func main(a: int): mut int {
	// thing: int = ten();
	// thing++;
	//return thing - 11;
    duh := _2345_test日本語てすと(6, 7);
	return 0;
}
