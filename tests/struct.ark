type EmptyStruct struct {};

#[c] func printf(fmt: ^u8, ...) -> int;

mut thing := Test{z: 42};

pub func main() -> int {
    C::printf(c"thing.z: %f\n", thing.z);
    if thing.z != 42 {
        return 1;
    }

    thing.y = 9;
    C::printf(c"thing.y: %d\n", thing.y);
    if thing.y != 9 {
        return 2;
    }

    thing.test2.x = 11;
    C::printf(c"thing.test2.x: %d\n", thing.test2.x);
    if thing.test2.x != 11 {
        return 3;
    }

    thing.test2.x = thing.test2.x + 9;
    if thing.test2.x != 20 {
        return 4;
    }

    return 0;
}


type Test2 struct {
    x: int,
};

type Test struct {
    x: int,
    y: int,
    z: f64,
    a: f32,
    e: ^u8,
    test2: Test2,
};
