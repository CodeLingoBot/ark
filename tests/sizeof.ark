#[c] func printf(fmt: ^u8, ...) -> int;

type Test struct {
    x: int,
    y: int,
    a: int,
    b: int
};

pub func main() -> int {
    i: int = 0;
    C::printf(c"sizeof i: %d\n", sizeof(i));
    C::printf(c"sizeof &i: %d\n", sizeof(&i));

    a: u8 = 0;
    C::printf(c"sizeof a: %d\n", sizeof(a));

    mut test: Test;
    C::printf(c"sizeof test: %d\n", sizeof(test));

    x: u8 = 0;
    if sizeof(x) != 1 {
        return 1;
    }

    y: s16 = 0;
    if sizeof(y) != 2 {
        return 2;
    }

    z: s64 = 0;
    if sizeof(z) != 8 {
        return 3;
    }

    return 0;
}
