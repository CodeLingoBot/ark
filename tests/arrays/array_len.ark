[c] func printf(fmt: ^u8, ...) -> int;

func main() -> int {
	C::printf(c"this is a test\n");

	// iterates 15 times
	z : uint = len([]int{0, 1, 2}) + 12;
	mut i: uint = 0;
	for i < z {
		C::printf(c"iter %d\n", i);
		i += 1;
	}

	// iterate thru array
	// this doesn't work as it should yet...
	foo := []int{0, 1, 2, 3};

	// i haven't looked into it
	// but #foo seems to just be
	// a copy of the foo array or something? ...
	foo_len := len(foo);
	C::printf(c"foo is %d long\n", foo_len);

	i = 0;
	for i < len(foo) {
		C::printf(c"foo contains %d at %d\n", foo[i], i);
		i += 1;
	}


	return 0;
}
