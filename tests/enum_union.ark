[c] func printf(fmt: ^u8, ...) -> int;

type Tree enum {
    Node{left: ^Tree, right: ^Tree},
    Leaf(int)
};

func (tree: Tree) dump() {
	match tree {
		Node(left, right) => {
			C::printf(c"Node\n");
			left.dump();
			right.dump();
		},
		Leaf(value) => {
			C::printf(c"Leaf: %d\n", value);
		},
		_ => {
			C::printf(c"Invalid tree instance\n");
		},
	}
}

pub func main() -> int {
	x := Tree::Leaf(42);
	y := Tree::Leaf(36);
	z := Tree::Node{left: ^x, right: ^y};

    z.dump();

    return 0;
}
