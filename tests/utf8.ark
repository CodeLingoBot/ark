#use std::io
#use std::mem
#use std::unicode::utf8

TEST_STRINGS := []string{
    "hello",
    "Test string 1234\n",
    "こんにちは",
    "東京",
    "你好",
    "weiß",
    "ЁЂЃЄЅІЇЈЉЊЋЌЍЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя",
    "❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙",
    "1;DROP TABLE users",
    "울란바토르",
    "ﾟ･✿ヾ╲(｡◕‿◕｡)╱✿･ﾟ",
};

TEST_STRING_NUM_RUNES := []uint{
    5,
    17,
    5,
    2,
    2,
    4,
    79,
    30,
    18,
    5,
    16,
};

pub func main() -> int {
    mut i: uint = 0;
    for i < len(TEST_STRINGS) {

        numRunes := utf8::numRunes([]u8(TEST_STRINGS[i]));
        if numRunes != TEST_STRING_NUM_RUNES[i] {
            return 1;
        }

        runeArray := mem::allocArray<rune>(numRunes);
        utf8::decode(runeArray, []u8(TEST_STRINGS[i]));
        numBytes := utf8::numBytes(runeArray);
        if numBytes != len(TEST_STRING_NUM_RUNES[i]) {
            return 2;
        }

        byteArray := mem::allocArray<u8>(numBytes);
        utf8::encode(byteArray, runeArray);
        mut t: uint = 0;
        for t < numBytes {
            if byteArray[t] != TEST_STRINGS[i][t] {
                return 3;
            }
            t += 1;
        }

        i += 1;
    }

    return 0;
}
